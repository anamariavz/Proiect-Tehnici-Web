<!DOCTYPE html>
<html lang="ro">
    <head>
        <title>HappyDent</title>
        
        <meta name="viewport" content="width=device-width, initial-scale=1.0"><!-- va fi explicat cand ajungem la CSS -->
        <meta name="keywords" content="medici, stomatolog, tratamente, sănătate orală"><!--cuvintele cheie ale paginii; majoritatea motoarelor de cautare ignora keywords -->
        <meta name="description" content="Clinica noastră te întâmpină cu o echipă de profesioniști și tratamente personalizate."><!-- descrierea paginii, adesea apare sub link cand sunt afisate rezultatele cautarii -->
        <meta name="author" content="Ana-Maria Vizireanu">  <!-- autorul/autoarea paginii--> 
        <link rel="stylesheet" href="resurse/css/despre.css" />
        <link rel="stylesheet" href="resurse/css/general.css" />
        <link rel="stylesheet" href="/resurse/css/galerie-statica.css">
        <link rel="stylesheet" href="/resurse/css/galerie-animata.css">


        
        <%- include("../fragmente/head.ejs")  %>
    </head>
    <body>
        <%- include("../fragmente/header.ejs")  %>

        <main> 
            <%- include("../fragmente/galerie.ejs")  %>


          <% const nrRanduri = Math.sqrt(imaginiGalerie.length); %>
            <div class="galerie-animata" id="galerie-animata" style="--nr:<%= nrRanduri %>;">
                <div class="container-grid">
                    <% imaginiGalerie.forEach((img, i) => { %>
                        <div class="patrat" data-index="<%= i %>">
                            <img src="<%= img.fisier_mediu %>" alt="<%= img.descriere %>">
                        </div>
                    <% }) %>
                </div>
            </div>

            <script>
                const galerie = document.querySelector('.galerie-animata');
                const grid = galerie.querySelector('.container-grid');
                const patrate = galerie.querySelectorAll('.patrat');
                let index = 0;

                const nr = parseInt(getComputedStyle(galerie).getPropertyValue('--nr')) || 3;
                const scale = nr;

                function updateTransform() {
                const row = Math.floor(index / nr);
                const col = index % nr;

                const tx = `${(0.5 - (col + 0.5) / nr) * 100}%`;
                const ty = `${(0.5 - (row + 0.5) / nr) * 100}%`;

                grid.style.setProperty('--tx', tx);
                grid.style.setProperty('--ty', ty);
                grid.style.setProperty('--scale', scale);
                }

                function animate() {
                // Zoom out: arată tot gridul
                grid.style.setProperty('--scale', '1');
                grid.style.setProperty('--tx', '0%');
                grid.style.setProperty('--ty', '0%');

                // După o scurtă pauză, zoom in pe următoarea imagine
                setTimeout(() => {
                    index = (index + 1) % patrate.length;
                    updateTransform();
                }, 500);
                }

                // Inițial, afișează prima imagine mărită
                updateTransform();

                // Pornește animația
                let interval = setInterval(animate, 2000);

                // Oprește animația la hover
                galerie.addEventListener('mouseenter', () => clearInterval(interval));
                galerie.addEventListener('mouseleave', () => {
                interval = setInterval(animate, 2000);
                });

            </script>

              
              
        </main>
    
        <%- include("../fragmente/footer.ejs")  %>
        

        
        
    </body>
</html>